// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Entities;

namespace Project.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20220121152424_Added1MandMM")]
    partial class Added1MandMM
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Project.Entities.Contract", b =>
                {
                    b.Property<string>("IdModel")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdCustomer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IdModel", "IdCustomer");

                    b.HasIndex("IdCustomer");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("Project.Entities.Customers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Project.Entities.Model", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProducerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Release")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("Project.Entities.Producer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("Project.Entities.Specifications", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Engine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<string>("IdModel")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdModel")
                        .IsUnique()
                        .HasFilter("[IdModel] IS NOT NULL");

                    b.ToTable("Specifications");
                });

            modelBuilder.Entity("Project.Entities.Contract", b =>
                {
                    b.HasOne("Project.Entities.Customers", "Customers")
                        .WithMany("Transaction")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Entities.Model", "Model")
                        .WithMany("Transaction")
                        .HasForeignKey("IdModel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Project.Entities.Model", b =>
                {
                    b.HasOne("Project.Entities.Producer", "Producer")
                        .WithMany("Model")
                        .HasForeignKey("ProducerId");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Project.Entities.Specifications", b =>
                {
                    b.HasOne("Project.Entities.Model", "Model")
                        .WithOne("Specifications")
                        .HasForeignKey("Project.Entities.Specifications", "IdModel");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Project.Entities.Customers", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Project.Entities.Model", b =>
                {
                    b.Navigation("Specifications");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Project.Entities.Producer", b =>
                {
                    b.Navigation("Model");
                });
#pragma warning restore 612, 618
        }
    }
}
